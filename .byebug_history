exit
user.errors.nil?
user.errors
user
exit
response.body
next
exit
response.headers
response.status
next
response.to_a
response.body
response
exit
next
request.to_a
request
response.body
response
exit
user.orders
user
order
q
order.queue
order.in_queue?
q
user.billing_address
user.shipping_address
user
exit
ord.in_progress?
ord.in_queue?
ord.in_queue
ord
q
order
q
order.aasm_state
order.state
order
q
next
q
order.build_billing_address.attributes.except("id")
order.build_billing_address.attributes.except(:id)
order.build_billing_address.attributes
order.build_billing_address
order.update(:fasg)
order.update(total_price: 'gdf')
order.update(total_price: 12)
order.update(step_params)
order.update
q
n
next
q
next
exit
y
q
order.valid?
order
next
order
q
order
next
order.build_shipping_address.attributes
order.build_shipping_address
order
q
controller.params
exit
controller.params
params
q
exit
order.build_or_find_billing_address(user)
order.build_or_find_billing_address
order.valid?
order
next
Order.instance_variables
q
instance_variables
next
instance_variables
next
instance_variables
q
previous
back
puts response.to_a
next
